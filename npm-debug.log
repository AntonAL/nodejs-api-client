0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish', '--access=public' ]
2 info using npm@3.5.2
3 info using node@v8.10.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/var/www/bdc-api-client/nodejs',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/pekko/.npm/@bigdatacloudapi/client/1.0.0/package.tgz not in flight; packing
9 info lifecycle @bigdatacloudapi/client@1.0.0~prepublish: @bigdatacloudapi/client@1.0.0
10 silly lifecycle @bigdatacloudapi/client@1.0.0~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/home/pekko/.npm/@bigdatacloudapi/client/1.0.0/package.tgz',
11 verbose tar pack   '/var/www/bdc-api-client/nodejs' ]
12 verbose tarball /home/pekko/.npm/@bigdatacloudapi/client/1.0.0/package.tgz
13 verbose folder /var/www/bdc-api-client/nodejs
14 verbose addLocalTarball adding from inside cache /home/pekko/.npm/@bigdatacloudapi/client/1.0.0/package.tgz
15 silly cache afterAdd @bigdatacloudapi/client@1.0.0
16 verbose afterAdd /home/pekko/.npm/@bigdatacloudapi/client/1.0.0/package/package.json not in flight; writing
17 verbose afterAdd /home/pekko/.npm/@bigdatacloudapi/client/1.0.0/package/package.json written
18 silly publish { name: '@bigdatacloudapi/client',
18 silly publish   version: '1.0.0',
18 silly publish   description: 'A NodeJS client for BigDataCloud API connectivity (https://www.bigdatacloud.net)',
18 silly publish   main: 'index.js',
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/bigdatacloudapi/nodejs-api-client.git' },
18 silly publish   keywords: [ 'ip-geolocation', 'bigdatacloud', 'bigdatacloudapi' ],
18 silly publish   author: { name: 'BigDataCloud' },
18 silly publish   license: 'MIT',
18 silly publish   bugs:
18 silly publish    { url: 'https://github.com/bigdatacloudapi/nodejs-api-client/issues' },
18 silly publish   homepage: 'https://github.com/bigdatacloudapi/nodejs-api-client#readme',
18 silly publish   dependencies: { request: '^1.0.0' },
18 silly publish   readme: '# BigDataCloud NodeJS API Client\n\n\nA NodeJS client for connecting to the API services provided by [BigDataCloud](https://www.bigdatacloud.net)\n\n\n## What API services does [BigDataCloud](https://www.bigdatacloud.net) offer?\n\nBigDataCloud offers a range of extremely useful and fast APIs that can be utilised in both backend and frontend scenarios.\nFrom validating customer input live to the next generation of IP Geolocation technology, BigDataCloud has an API suitable to your needs.\n\nFor a full list of APIs, visit our [documentation area](https://www.bigdatacloud.net/ip-geolocation-apis).\n\nYou can access any and all BigDataCloud APIs with a free API Key.\nTo get your API Key, just access your account and retrieve it from your [Account Dashboard](https://www.bigdatacloud.net/customer/account).\nIf you are not yet a customer, it is completely free to join.\n\n\n\n## Documentation\n\nFor documentation specific to this api client, please read below.\nFor more specific documentation to the APIs available, including endpoints, request and response data, please visit our [documentation area](https://www.bigdatacloud.net/ip-geolocation-apis).\n\n\n\n## Authentication / Identification\n\nTo use this API client you must have a BigDataCloud API Key.\nTo get your personal key, just access your account and retrieve it from your [Account Dashboard](https://www.bigdatacloud.net/customer/account).\nIf you are not yet a customer, it is completely free to join.\n\nSimply provide this key when initiating the api client, and it will be included in all requests to the BigDataCloud API Server.\nSee the example below.\n\n\n\n## Installation\n\n`npm install @bigdatacloudapi/client`\n\n\n\n## Example usage\n\n```javascript\n\tconst client = require(\'@bigdatacloudapi/client\')(\'XXX\'); // XXX being your api key found at: https://www.bigdatacloud.net/customer/account\n\n    /*\n     * All api endpoints can be accessed via magic methods in the following camelised format:\n     * method | endpoint\n     * For example: an asynchronous "GET" call to the "ip-geolocation-full" endpoint would be: client.getIpGeolocationFull();\n     * All endpoints return a promise\n     */\n\n    //Asynchronous example using \'then\':\n    client\n    .getIpGeolocationFull({ip:\'8.8.8.8\'})\n    .then(function(jsonResult) {\n        console.log(\'Asynchronous "then" result:\',jsonResult);\n    })\n    .catch(function(error) {\n        console.error(\'Asynchronous "then" error:\', error);\n    });\n\n    //Asynchronous example using \'await\':\n    (async function() {\n        try {\n            var jsonResult = await client.getIpGeolocationFull({ip:\'8.8.8.8\'});\n            console.log(\'Asynchronous "await" result:\',jsonResult);\n        } catch (error) {\n            console.error(\'Asynchronous "await" error:\', error);\n        }\n    })();\n\n</script>\n```\n\n\n## Example output\n\n```javascript\n{\n    "ip": "8.8.8.8",\n    "country": {\n        "isoAlpha2": "US",\n        "isoAlpha3": "USA",\n        "m49Code": 840,\n        "isoName": "United States of America (the)",\n        "isoAdminLanguages": [\n            {\n                "isoAlpha3": "eng",\n                "isoAlpha2": "en",\n                "isoName": "English"\n            }\n        ],\n        "unRegion": "Americas/Northern America",\n        "currency": {\n            "numericCode": 840,\n            "code": "USD",\n            "name": "US Dollar",\n            "minorUnits": 2\n        },\n        "wbRegion": {\n            "id": "NAC",\n            "iso2Code": "XU",\n            "value": "North America"\n        },\n        "wbIncomeLevel": {\n            "id": "HIC",\n            "iso2Code": "XD",\n            "value": "High income"\n        },\n        "callingCode": "1",\n        "countryFlagEmoji": "ðŸ‡ºðŸ‡¸"\n    },\n    "location": {\n        "isoPrincipalSubdivision": "California",\n        "isoPrincipalSubdivisionCode": "US-CA",\n        "city": "Mountain View",\n        "postcode": "94043",\n        "latitude": 37.42,\n        "longitude": -122.09,\n        "timeZone": {\n            "ianaTimeId": "America/Los_Angeles",\n            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",\n            "effectiveTimeZoneFull": "Pacific Daylight Time",\n            "effectiveTimeZoneShort": "PDT",\n            "UtcOffsetSeconds": -25200,\n            "UtcOffset": "-07",\n            "isDaylightSavingTime": true,\n            "localTime": "2019-04-06T04:06:39.1691744"\n        }\n    },\n    "lastUpdated": "2019-04-06T09:09:36.1877959Z",\n    "network": {\n        "registry": "ARIN",\n        "registryStatus": "assigned",\n        "registeredCountry": "US",\n        "registeredCountryName": "United States of America (the)",\n        "organisation": "Google LLC",\n        "isReachableGlobally": true,\n        "isBogon": false,\n        "bgpPrefix": "8.8.8.0/24",\n        "bgpPrefixNetworkAddress": "8.8.8.0",\n        "bgpPrefixLastAddress": "8.8.8.255",\n        "totalAddresses": 256,\n        "carriers": [\n            {\n                "asn": "AS15169",\n                "asnNumeric": 15169,\n                "organisation": "Google LLC",\n                "name": "GOOGLE",\n                "registry": "ARIN",\n                "registeredCountry": "US",\n                "registeredCountryName": "United States of America (the)",\n                "registrationDate": "2000-03-30",\n                "registrationLastChange": "2012-02-25",\n                "totalIpv4Addresses": 8698103,\n                "totalIpv4Prefixes": 435,\n                "totalIpv4BogonPrefixes": 0,\n                "rank": 53,\n                "rankText": "#53 out of 62,872"\n            }\n        ],\n        "viaCarriers": [\n            {\n                "asn": "AS7018",\n                "asnNumeric": 7018,\n                "organisation": "ATT Services Inc.",\n                "registeredCountry": "US",\n                "registeredCountryName": "United States of America (the)",\n                "rank": 2\n            },\n       \t\t/*........*/\n            {\n                "asn": "AS31019",\n                "asnNumeric": 31019,\n                "organisation": "Paulus M. Hoogsteder trading as Meanie",\n                "registeredCountry": "NL",\n                "registeredCountryName": "Netherlands (the)",\n                "rank": 51153\n            }\n        ]\n    },\n    "confidence": "low",\n    "confidenceArea": [\n        {\n            "latitude": 18.0256672,\n            "longitude": -66.5275345\n        },\n        /*........*/\n        {\n            "latitude": 18.0256672,\n            "longitude": -66.5275345\n        }\n    ],\n    "securityThreat": "unknown",\n    "hazardReport": {\n        "isKnownAsTorServer": false,\n        "isKnownAsProxy": false,\n        "isKnownAsMailServer": false,\n        "isKnownAsPublicRouter": false,\n        "isBogon": false,\n        "isUnreachable": false\n    }\n}\n```\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'fe87dc1583e3ddacc46279a231ab0c730bf46f75',
18 silly publish   _id: '@bigdatacloudapi/client@1.0.0',
18 silly publish   scripts: {},
18 silly publish   _shasum: 'b59292980780ea6d7e753a07badcb3724d7b5f8f',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name @bigdatacloudapi/client
21 silly mapToRegistry scope (from package name) @bigdatacloudapi
22 verbose mapToRegistry no registry URL found in name for scope @bigdatacloudapi
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npmjs.org/
25 silly mapToRegistry uri https://registry.npmjs.org/@bigdatacloudapi%2fclient
26 verbose publish registryBase https://registry.npmjs.org/
27 silly publish uploading /home/pekko/.npm/@bigdatacloudapi/client/1.0.0/package.tgz
28 verbose request uri https://registry.npmjs.org/@bigdatacloudapi%2fclient
29 verbose request sending authorization for write operation
30 info attempt registry request try #1 at 8:16:12 AM
31 verbose request using bearer token for auth
32 verbose request id 17eb7be358b59ccb
33 http request PUT https://registry.npmjs.org/@bigdatacloudapi%2fclient
34 http 403 https://registry.npmjs.org/@bigdatacloudapi%2fclient
35 verbose headers { date: 'Sun, 07 Apr 2019 08:16:12 GMT',
35 verbose headers   'content-type': 'application/json',
35 verbose headers   'transfer-encoding': 'chunked',
35 verbose headers   connection: 'keep-alive',
35 verbose headers   'set-cookie':
35 verbose headers    [ '__cfduid=d3b86dfa375d42b344d45917051ebd6cd1554624972; expires=Mon, 06-Apr-20 08:16:12 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
35 verbose headers   'cf-ray': '4c3a8edc3b8c19bc-SYD',
35 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
35 verbose headers   vary: 'Accept-Encoding',
35 verbose headers   server: 'cloudflare',
35 verbose headers   'content-encoding': 'gzip' }
36 verbose request invalidating /home/pekko/.npm/registry.npmjs.org/_40bigdatacloudapi_252fclient on PUT
37 error publish Failed PUT 403
38 verbose stack Error: You cannot publish over the previously published versions: 1.0.0. : @bigdatacloudapi/client
38 verbose stack     at makeError (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:264:12)
38 verbose stack     at CachingRegistryClient.<anonymous> (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:252:14)
38 verbose stack     at /usr/share/npm/node_modules/npm-registry-client/lib/request.js:178:7
38 verbose stack     at Gunzip.onEnd (zlib.js:131:5)
38 verbose stack     at emitNone (events.js:111:20)
38 verbose stack     at Gunzip.emit (events.js:208:7)
38 verbose stack     at endReadableNT (_stream_readable.js:1064:12)
38 verbose stack     at _combinedTickCallback (internal/process/next_tick.js:138:11)
38 verbose stack     at process._tickCallback (internal/process/next_tick.js:180:9)
39 verbose statusCode 403
40 verbose pkgid @bigdatacloudapi/client
41 verbose cwd /var/www/bdc-api-client/nodejs
42 error Linux 4.15.0-1034-aws
43 error argv "/usr/bin/node" "/usr/bin/npm" "publish" "--access=public"
44 error node v8.10.0
45 error npm  v3.5.2
46 error code E403
47 error You cannot publish over the previously published versions: 1.0.0. : @bigdatacloudapi/client
48 error If you need help, you may report this error at:
48 error     <https://github.com/npm/npm/issues>
49 verbose exit [ 1, true ]
